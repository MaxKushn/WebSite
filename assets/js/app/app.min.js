(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
module.exports = (function() {
	'use strict';

	var config          = require('./config/router.js');
	var initServices    = require('./services/initServices.js');
	var initControllers = require('./controllers/initControllers.js');
	var initDirectives  = require('./directives/initDirectives.js');

	var webApp = angular.module('webApp', ['ui.router', 'ngNotify'])
		.run(['$rootScope',  '$state', function ($rootScope, $state) {
     		$rootScope.$state = $state;
    }]);

	config(webApp);
	initServices(webApp);
	initControllers(webApp);
	initDirectives(webApp);
}());

},{"./config/router.js":2,"./controllers/initControllers.js":7,"./directives/initDirectives.js":9,"./services/initServices.js":16}],2:[function(require,module,exports){
module.exports = function(module) {
	'use strict';
	module
	.config(['$stateProvider', '$urlRouterProvider',
		function($stateProvider, $urlRouterProvider) {
			//        DEFAULT VIEW
			$urlRouterProvider.otherwise('/home');

			$stateProvider
			.state('home', {
				url: '/home',
				templateUrl: '/assets/templates/home.html',
				controller: 'HomePageController',
			})
			.state('contacts', {
				url: '/contacts',
				templateUrl: '/assets/templates/contacts.html',
				controller: 'ContactPageController',
			})
			.state('blog', {
				url: '/blog',
				templateUrl: '/assets/templates/blog.html',
			})
			.state('blog-2', {
				url: '/blog-2',
				templateUrl: '/assets/templates/blog-2.html',
			})
			.state('sign-in', {
				url: '/sign-in',
				templateUrl: '/assets/templates/sign-in.html',
				controller: 'SignInController',
			})
			.state('sign-up', {
				url: '/sign-up',
				templateUrl: '/assets/templates/sign-up.html',
				controller: 'SignUpController',
			})
		}])
};

},{}],3:[function(require,module,exports){
module.exports = function(module) {
	'use strict';
	/**
	 * @ndoc controller
	 * @name webApp.controller:ContactPageController
	 *
	 * @description
	 * controller for Contact page.
	 */
	module
	.controller('ContactPageController', ['$scope', 'ngNotify', 'ContactServices',
    function($scope, ngNotify, ContactServices) {
			  /**
				 * @ndoc method
				 * @name displayNotify
				 *
				 * @methodOf webApp.controller: ContactPageController
				 *
				 * @description
				 * this method infrom user that his action were successfull
				 */
				$scope.displayNotify = function(notify) {
                switch(notify) {
                	case 'success':
                        ngNotify.set('You have successfully send the form!', {
                            type: 'success'
                        });
                  break;
    							case 'error':
    		            		ngNotify.set('You have not send the form, try again later.', 'error');
    		        	break;
                  default:
                        ngNotify.set('This is the current default message type.');
                  break;
                }
        };
				/**
				 * @ndoc method
				 * @name CheckTheForm
				 *
				 * @methodOf webApp.controller: ContactPageController
				 *
				 * @description
				 * this method check the response from the server
				 */
				$scope.CheckTheForm = function() {
					ContactServices.submitForm($scope.formData)
					.then(function(response) {
							$scope.displayNotify('success');
					},function(error) {
							$scope.displayNotify('error');
					});
				}


}])};

},{}],4:[function(require,module,exports){
module.exports = function(module) {
	'use strict';
	/**
	 * @ndoc controller
	 * @name webApp.controller:HomePageController
	 *
	 * @description
	 * controller for main page.
	 */
	module
	.controller('HomePageController', ['$scope', '$interval',
    function($scope, $interval) {
		/**
		 * @ndoc array
		 * @name images
		 *
		 * @arrayOf webApp.controller: ContactPageController
		 *
		 * @description
		 * contain images for gallery on the main page.
		 */
		$scope.images = [{src:'http://livedemo00.template-help.com/drupal_52188/sites/default/files/styles/flexslider_full/public/slide-1.jpg?itok=n8rpU1Sd', desc:"We added technology to strategy. You get the multiplier effect", title:"Business works with technology"},
		{src:'http://livedemo00.template-help.com/drupal_52188/sites/default/files/styles/flexslider_full/public/slide-2.jpg?itok=-qk5utWc', desc:"We are the trusted advisor to the world's leading businesses", title:"Professional Consulting Services"},
		{src:'http://livedemo00.template-help.com/drupal_52188/sites/default/files/styles/flexslider_full/public/slide-3.jpg?itok=N0lvhY6E', desc:"We work with our clients as we do with our colleagues", title:"Broaden your market edge"},
		{src:'http://livedemo00.template-help.com/drupal_52188/sites/default/files/styles/flexslider_full/public/slide-4.jpg?itok=wzGN91aT', desc:"We develop unparalleled management insights", title:"We are a network of leaders"}];
		/**
		 * @ndoc variable
		 * @name _Index
		 *
		 * @description
		 * contain first image that will show on the gallery
		 */
		$scope._Index = 0;
		/**
		 * @ndoc variable
		 * @name myPattern
		 *
		 * @description
		 * contain parallax image
		 */
		$scope.myPattern = "http://static.livedemo00.template-help.com/drupal_52188/sites/default/files/parallax-1.jpg";
		/**
		 * @ndoc method
		 * @name showImg
		 *
		 * @methodOf webApp.controller: HomePageController
		 *
		 * @description
		 * show certain image
		 */
		$scope.showImg = function(index) {
			$scope._Index = index;
		};
		/**
		 * @ndoc method
		 * @name $interval
		 *
		 * @methodOf webApp.controller: HomePageController
		 *
		 * @description
		 * switch images every 5 sec.
		 */
		$interval(function () {
			$scope.showImg($scope._Index);
			$scope._Index = $scope._Index + 1
			if($scope._Index >= $scope.images.length) {
				$scope._Index = 0}
			}, 5000)
		/**
		 * @ndoc method
		 * @name isActive
		 *
		 * @methodOf webApp.controller: HomePageController
		 *
	   * @description
		 * pick active image
		 */
		$scope.isActive = function (index) {
			return $scope._Index === index;
		};
}])};

},{}],5:[function(require,module,exports){
module.exports = function(module) {
	'use strict';
	/**
	 * @ndoc controller
	 * @name webApp.controller:SignInController
	 *
	 * @description
	 * controller for sign-in page.
	 */
	module
	.controller('SignInController', ['$scope', '$interval', 'SignInServices',
    function($scope, $interval, SignInServices) {
			/**
			 * @ndoc method
			 * @name CheckTheLogin
			 *
			 * @methodOf webApp.controller: SignInController
			 *
			 * @description
			 * this method check the response from the server
			 */
			$scope.CheckTheLogin = function() {
				SignInServices.sendLogin($scope.loginData)
				.then(function(response) {
						''
				},function(error) {
						''
				});
			}

}])};

},{}],6:[function(require,module,exports){
module.exports = function(module) {
	'use strict';
	/**
	 * @ndoc controller
	 * @name webApp.controller:SignUpController
	 *
	 * @description
	 * controller for sing-up page.
	 */
	module
	.controller('SignUpController', ['$scope', '$interval', 'SignUpServices', 'ngNotify',
    function($scope, $interval, SignUpServices, ngNotify) {
			/**
			 * @ndoc method
			 * @name displayNotifyReg
			 *
			 * @methodOf webApp.controller: SignUpController
			 *
			 * @description
			 * this method infrom user that his action were successfull
			 */
			$scope.displayNotifyReg = function(notify) {
							switch(notify) {
								case 'success':
											ngNotify.set('You have successfully registered!', {
													type: 'success'
											});
								break;
								case 'error':
											ngNotify.set('You have not send the form, try again later.', 'error');
								break;
								default:
											ngNotify.set('This is the current default message type.');
								break;
							}
			};
			/**
			 * @ndoc method
			 * @name CheckTheRegForm
			 *
			 * @methodOf webApp.controller: SignUpController
			 *
			 * @description
			 * this method check the response from the server
			 */
			$scope.CheckTheRegForm = function() {
				SignUpServices.sendCode($scope.joinData)
				.then(function(response) {
						$scope.displayNotifyReg('success');
				},function(error) {
						$scope.displayNotifyReg('error');
				});
			}
}])};

},{}],7:[function(require,module,exports){
module.exports = function(module) {
	require('./HomePageController.js')(module);
	require('./ContactPageController.js')(module);
	require('./SignInController.js')(module);
	require('./SignUpController.js')(module);
};

},{"./ContactPageController.js":3,"./HomePageController.js":4,"./SignInController.js":5,"./SignUpController.js":6}],8:[function(require,module,exports){
module.exports = function (module) {
    'use strict';
    /**
     * @ndoc directive
     * @name webApp.directive:emailValidation
     * @require 'NgModel'
     * @restrict ''
     * @scope
     *
     * @description
     * This check validation for emails
     */
    module
    .directive('validateEmail', function() {
      var EMAIL_REGEXP = /^[_a-z0-9]+(\.[_a-z0-9]+)*@[a-z0-9-]+(\.[a-z0-9-]+)*(\.[a-z]{2,4})$/;

      return {
        require: 'ngModel',
        restrict: '',
        link: function(scope, elm, attrs, ctrl) {
          // only apply the validator if ngModel is present and Angular has added the email validator
          if (ctrl && ctrl.$validators.email) {

            // this will overwrite the default Angular email validator
            ctrl.$validators.email = function(modelValue) {
              return ctrl.$isEmpty(modelValue) || EMAIL_REGEXP.test(modelValue);
            };
          }
        }
      };
    })
};

},{}],9:[function(require,module,exports){
module.exports = function (module) {
	require('./websiteBehaviour.js')(module);
	require('./emailValidation.js')(module);
	require('./nameValidation.js')(module);
	require('./passValidation.js')(module);
}

},{"./emailValidation.js":8,"./nameValidation.js":10,"./passValidation.js":11,"./websiteBehaviour.js":12}],10:[function(require,module,exports){
module.exports = function (module) {
    'use strict';
    /**
     * @ndoc directive
     * @name webApp.directive:nameValidation
     * @require 'NgModel'
     * @restrict 'A'
     * @scope
     *
     * @description
     * This check validation for names
     */
    module
      .directive('fullName', function() {
        return {
            restrict: 'A',
            require: 'ngModel',
            link: function(scope, element, attrs, controller) {
                controller.$parsers.unshift(function(viewValue) {

                    if(viewValue && viewValue.indexOf(' ') !== -1 && viewValue[viewValue.indexOf(' ') + 1]) {
                        controller.$setValidity('fullname', true);
                        return viewValue;
                    } else {
                        controller.$setValidity('fullname', false);
                        return viewValue;
                    }

                });
            }
        };
    });
};

},{}],11:[function(require,module,exports){
module.exports = function (module) {
    'use strict';
    /**
     * @ndoc directive
     * @name webApp.directive:passValidation
     * @require 'NgModel'
     * @restrict ''
     * @scope
     *
     * @param {String} passwordVerify This parameter compares passwords for verify
     *
     * @description
     * This check verify for passwords
     */
    module
    .directive("passwordVerify", function() {
       return {
          require: "ngModel",
          scope: {
            passwordVerify: '='
          },
          link: function(scope, element, attrs, ctrl) {
            scope.$watch(function() {
                var combined;

                if (scope.passwordVerify || ctrl.$viewValue) {
                   combined = scope.passwordVerify + '_' + ctrl.$viewValue;
                }
                return combined;
            }, function(value) {
                if (value) {
                    ctrl.$parsers.unshift(function(viewValue) {
                        var origin = scope.passwordVerify;
                        if (origin !== viewValue) {
                            ctrl.$setValidity("passwordVerify", false);
                            return undefined;
                        } else {
                            ctrl.$setValidity("passwordVerify", true);
                            return viewValue;
                        }
                    });
                }
            });
         }
       };
})};

},{}],12:[function(require,module,exports){
module.exports = function (module) {
    'use strict';
    /**
     * @ndoc directive
     * @name webApp.directive:websiteBehaviour
     * @restrict A
     * @scope
     *
     * @description
     * description for websiteBehaviour directive
     */
    module
    .directive('websiteBehaviour',['$rootScope', '$state', '$timeout', function($rootScope, $state, $timeout) {
        return {
            restrict: 'A',
            link: function(scope, element, attrs, controller) {
              /**
              * @ndoc jquery
              *
              * @description
              * changed page position to top when you moved to another page.
              */
            	$(document).ready(function() {
		    		        $('body').scrollTop(0);
				      });
              /**
              * @ndoc jquery
              *
              * @description
              * when you click on navbar remove and add class "Active" to the navbar names and make their background orange
              */
				      $(document).on('click','#main-navbar',function(e) {
				            if( $(e.target).is('a') && $(e.target).attr('class') != 'dropdown-toggle' ) {
				            $(this).collapse('hide');
				            }
				      });
            }
        };
    }]);
};

},{}],13:[function(require,module,exports){
module.exports = function (module) {
    'use strict';
    /**
     * @ndoc service
     * @name factory:ContactServices
     *
     * @description
     * service for Contact page that send request when form is success.
     */
    module
    .factory('ContactServices', ['$http', '$q', function($http, $q){

        return {
            submitForm: submitForm
        }
        /**
         * @ndoc method
         * @name submitForm
         *
         * @methodOf module.factory: ContactServices
         *
         * @description
         * send request to contacts
         */
        function submitForm(formData) {
            return $http ({
                method  : 'POST',
                url     : '/contacts',
                data    : formData,  // pass in data as strings
            })
        };

    }]);
};

},{}],14:[function(require,module,exports){
module.exports = function (module) {
    'use strict';
    /**
  	 * @ndoc service
  	 * @name factory:SignInServices
  	 *
  	 * @description
     * service for sign-in page that send request when login is success.
  	 */
    module
    .factory('SignInServices', ['$http', '$q', function($http, $q){

        return {
            sendLogin: sendLogin
        }
        /**
         * @ndoc method
         * @name sendCode
         *
         * @methodOf module.factory: SignInServices
         *
         * @description
         * send request to sign-in
         */
        function sendLogin(loginData) {
          return $http ({
                method  : 'POST',
                url     : '/sign-in',
                data    : loginData,  // pass in data as strings
            })
        };

    }]);
};

},{}],15:[function(require,module,exports){
module.exports = function (module) {
    'use strict';
    /**
  	 * @ndoc service
  	 * @name factory:SignUpServices
  	 *
  	 * @description
     * service for sign-up page that send request when form is success.
  	 */
    module
    .factory('SignUpServices', ['$http', '$q', function($http, $q){

        return {
            sendCode: sendCode
        }
        /**
         * @ndoc method
         * @name sendCode
         *
         * @methodOf module.factory: SignUpServices
         *
         * @description
         * send request to sign-up
         */
        function sendCode(joinData) {
          return $http ({
                method  : 'POST',
                url     : '/sign-up',
                data    : joinData,  // pass in data as strings
            })
        };

    }]);
};

},{}],16:[function(require,module,exports){
module.exports = function (module) {
	require('./ContactServices')(module);
	require('./SignUpServices')(module);
	require('./SignInServices')(module);
}

},{"./ContactServices":13,"./SignInServices":14,"./SignUpServices":15}]},{},[1]);
