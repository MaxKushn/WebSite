(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
module.exports = (function() {
	'use strict';

	var config          = require('./config/router.js');
	var initServices    = require('./services/initServices.js');
	var initControllers = require('./controllers/initControllers.js');
	var initDirectives  = require('./directives/initDirectives.js');

	var webApp = angular.module('webApp', ['ui.router', 'ngNotify'])
		.run(['$rootScope',  '$state', function ($rootScope, $state) {
   		$rootScope.$state = $state;
    }]);

	config(webApp);
	initServices(webApp);
	initControllers(webApp);
	initDirectives(webApp);
}());

},{"./config/router.js":2,"./controllers/initControllers.js":7,"./directives/initDirectives.js":9,"./services/initServices.js":16}],2:[function(require,module,exports){
module.exports = function(module) {
  "use strict";

module
.config(config);

function config($stateProvider, $urlRouterProvider) {
  $urlRouterProvider.otherwise('/home');
  $stateProvider
			.state('home', {
				url: '/home',
				templateUrl: '/assets/templates/home.html',
				controller: 'HomePageController',
				controllerAs: 'vm'
			})
			.state('contacts', {
				url: '/contacts',
				templateUrl: '/assets/templates/contacts.html',
				controller: 'ContactPageController',
				controllerAs: 'vm'
			})
			.state('blog', {
				url: '/blog',
				templateUrl: '/assets/templates/blog.html',
			})
			.state('blog-2', {
				url: '/blog-2',
				templateUrl: '/assets/templates/blog-2.html',
			})
			.state('sign-in', {
				url: '/sign-in',
				templateUrl: '/assets/templates/sign-in.html',
				controller: 'SignInController',
				controllerAs: 'vm'
			})
			.state('sign-up', {
				url: '/sign-up',
				templateUrl: '/assets/templates/sign-up.html',
				controller: 'SignUpController',
				controllerAs: 'vm'
			})
		};
};

},{}],3:[function(require,module,exports){
module.exports = function(module) {
	'use strict';
	/**
	 * @ndoc controller
	 * @name webApp.controller:ContactPageController
	 *
	 * @description
	 * controller for Contact page.
	 */
	module
	.controller('ContactPageController', ContactPageController);
	ContactPageController.$inject =  ['$scope', 'ngNotify', 'ContactServices'];
  function ContactPageController($scope, ngNotify, ContactServices) {
		/**
		 * @ngdoc property
		 * @name vm
		 *
		 * @description
		 * vm is an instance of the current controller.
		 */
	  var vm = this;
		vm.displayNotify = displayNotify;
		vm.submitForm = submitForm;
		vm.formData = {};
	  /**
		 * @ndoc method
		 * @name displayNotify
		 *
		 * @methodOf webApp.controller: ContactPageController
		 *
		 * @description
		 * this method infrom user that his action were successfull
		 */
		 function displayNotify (notify) {
      switch(notify) {
      	case 'success':
              ngNotify.set('You have successfully send the form!', {
                  type: 'success'
              });
        break;
				case 'error':
          		ngNotify.set('You have not send the form, try again later.', 'error');
      	break;
        default:
              ngNotify.set('This is the current default message type.');
        break;
      }
    };
		/**
		 * @ndoc method
		 * @name submitForm
		 *
		 * @methodOf webApp.controller: ContactPageController
		 *
		 * @description
		 * this method check the response from the server
		 */
		function submitForm(data) {
			ContactServices.send(data)
				.then(function() {
					$scope.myForm.$setPristine();
	        $scope.myForm.$setUntouched();
					$scope.formData = {};
					vm.displayNotify('success');
				}, function(error) {
					vm.displayNotify('error');
			});
		};
	};
};

},{}],4:[function(require,module,exports){
module.exports = function(module) {
	'use strict';
	/**
	 * @ndoc controller
	 * @name webApp.controller:HomePageController
	 *
	 * @description
	 * controller for main page.
	 */
	module
	.controller('HomePageController', HomePageController);
	 HomePageController.$inject = ['$scope', '$interval'];
    function HomePageController($scope, $interval) {
		/**
		 * @ngdoc property
		 * @name vm
		 *
		 * @description
		 * vm is an instance of the current controller.
		 */
		var vm = this;

		vm.showImg = showImg;
		vm.isActive = isActive;
	  /**
		 * @ndoc array
		 * @name images
		 *
		 * @arrayOf webApp.controller: ContactPageController
		 *
		 * @description
		 * contain images for gallery on the main page.
		 */
		vm.images = [
			{src:'http://livedemo00.template-help.com/drupal_52188/sites/default/files/styles/flexslider_full/public/slide-1.jpg?itok=n8rpU1Sd', desc:"We added technology to strategy. You get the multiplier effect", title:"Business works with technology"},
			{src:'http://livedemo00.template-help.com/drupal_52188/sites/default/files/styles/flexslider_full/public/slide-2.jpg?itok=-qk5utWc', desc:"We are the trusted advisor to the world's leading businesses", title:"Professional Consulting Services"},
			{src:'http://livedemo00.template-help.com/drupal_52188/sites/default/files/styles/flexslider_full/public/slide-3.jpg?itok=N0lvhY6E', desc:"We work with our clients as we do with our colleagues", title:"Broaden your market edge"},
			{src:'http://livedemo00.template-help.com/drupal_52188/sites/default/files/styles/flexslider_full/public/slide-4.jpg?itok=wzGN91aT', desc:"We develop unparalleled management insights", title:"We are a network of leaders"}
		];
		/**
		 * @ndoc variable
		 * @name _Index
		 *
		 * @description
		 * contain first image that will show on the gallery
		 */
		vm._Index = 0;
		/**
		 * @ndoc variable
		 * @name myPattern
		 *
		 * @description
		 * contain parallax image
		 */
		vm.myPattern = "http://static.livedemo00.template-help.com/drupal_52188/sites/default/files/parallax-1.jpg";
		/**
		 * @ndoc method
		 * @name showImg
		 *
		 * @methodOf webApp.controller: HomePageController
		 *
		 * @description
		 * show certain image
		 */
		function showImg(index) {
			vm._Index = index;
		};
		/**
		 * @ndoc method
		 * @name $interval
		 *
		 * @methodOf webApp.controller: HomePageController
		 *
		 * @description
		 * switch images every 5 sec.
		 */
		$interval(function () {
			vm.showImg(vm._Index);
			vm._Index = vm._Index + 1
			if(vm._Index >= vm.images.length) {
				vm._Index = 0}
			}, 5000)
		/**
		 * @ndoc method
		 * @name isActive
		 *
		 * @methodOf webApp.controller: HomePageController
		 *
	   * @description
		 * pick active image
		 */
		function isActive(index) {
			return vm._Index === index;
		};
	}
};

},{}],5:[function(require,module,exports){
module.exports = function(module) {
	'use strict';
	/**
	 * @ndoc controller
	 * @name webApp.controller:SignInController
	 *
	 * @description
	 * controller for sign-in page.
	 */
	module
	.controller('SignInController', SignInController);
	 SignInController.$inject = ['$scope', '$interval', 'SignInServices', '$state', 'ngNotify']
   function SignInController($scope, $interval, SignInServices, $state, ngNotify) {
	  /**
 		 * @ngdoc property
 		 * @name vm
 		 *
 		 * @description
 		 * vm is an instance of the current controller.
		 	 */
 		var vm = this;
		vm.displayNotifyReg = displayNotifyReg;
		vm.checkLogin = checkLogin;
		vm.loginData = {};
		/**
		 * @ndoc method
		 * @name displayNotifyReg
		 *
		 * @methodOf webApp.controller: SignUpController
		 *
		 * @description
		 * this method infrom user that his action were successfull
		 */
		 function displayNotifyReg(notify) {
				switch(notify) {
					case 'success':
						ngNotify.set('You have successfully registered!', {
							type: 'success'
						});
					break;
					case 'error':
						ngNotify.set('You have not send the form, try again later.', 'error');
					break;
					default:
						ngNotify.set('This is the current default message type.');
					break;
				}
			};
		/**
		 * @ndoc method
		 * @name checkLogin
		 *
		 * @methodOf webApp.controller: SignInController
		 *
		 * @description
		 * this method check the response from the server
		 */
		function checkLogin(data) {
			SignInServices.send(data)
			.then(function() {
				$state.go("home");
				$scope.loginData = {};
			},function(error) {
				vm.displayNotifyReg('error');
			});
		}
	 }
};

},{}],6:[function(require,module,exports){
module.exports = function(module) {
	'use strict';
	/**
	 * @ndoc controller
	 * @name webApp.controller:SignUpController
	 *
	 * @description
	 * controller for sing-up page.
	 */
	module
	.controller('SignUpController', SignUpController);
		SignUpController.$inject = ['$scope', '$interval', 'SignUpServices', 'ngNotify']
    function SignUpController($scope, $interval, SignUpServices, ngNotify) {
		/**
		 * @ngdoc property
		 * @name vm
		 *
		 * @description
		 * vm is an instance of the current controller.
		 */
		var vm = this;
		vm.displayNotifyReg = displayNotifyReg;
		vm.sendRegForm = sendRegForm;
		vm.joinData = {};
		/**
		 * @ndoc method
		 * @name displayNotifyReg
		 *
		 * @methodOf webApp.controller: SignUpController
		 *
		 * @description
		 * this method infrom user that his action were successfull
		 */
		 function displayNotifyReg(notify) {
						switch(notify) {
							case 'success':
										ngNotify.set('You have successfully registered!', {
												type: 'success'
										});
							break;
							case 'error':
										ngNotify.set('You have not send the form, try again later.', 'error');
							break;
							default:
										ngNotify.set('This is the current default message type.');
							break;
						}
			};
		/**
		 * @ndoc method
		 * @name sendRegForm
		 *
		 * @methodOf webApp.controller: SignUpController
		 *
		 * @description
		 * this method check the response from the server
		 */
		 function sendRegForm(data) {
			SignUpServices.send(data)
			.then(function() {
				$scope.Form.join.$setPristine();
				$scope.Form.join.$setUntouched();
				$scope.joinData = {};
				vm.displayNotifyReg('success');
			}, function(error) {
				vm.displayNotifyReg('error');
			});
		}
	}
};

},{}],7:[function(require,module,exports){
module.exports = function(module) {
	require('./HomePageController.js')(module);
	require('./ContactPageController.js')(module);
	require('./SignInController.js')(module);
	require('./SignUpController.js')(module);
};

},{"./ContactPageController.js":3,"./HomePageController.js":4,"./SignInController.js":5,"./SignUpController.js":6}],8:[function(require,module,exports){
module.exports = function (module) {
  'use strict';
  /**
   * @ndoc directive
   * @name webApp.directive:emailValidation
   * @require 'NgModel'
   * @restrict 'A'
   * @scope
   *
   * @description
   * This check validation for emails
   */
  module
  .directive('validateEmail', function() {
    var EMAIL_REGEXP = /^[_a-z0-9]+(\.[_a-z0-9]+)*@[a-z0-9-]+(\.[a-z0-9-]+)*(\.[a-z]{2,4})$/;

    return {
      require: 'ngModel',
      restrict: 'A',
      link: function(scope, elm, attrs, ctrl) {
        // only apply the validator if ngModel is present and Angular has added the email validator
        if (ctrl && ctrl.$validators.email) {

          // this will overwrite the default Angular email validator
          ctrl.$validators.email = function(modelValue) {
            return ctrl.$isEmpty(modelValue) || EMAIL_REGEXP.test(modelValue);
          };
        }
      }
    };
  })
};

},{}],9:[function(require,module,exports){
module.exports = function (module) {
	require('./websiteBehaviour.js')(module);
	require('./emailValidation.js')(module);
	require('./nameValidation.js')(module);
	require('./passValidation.js')(module);
}

},{"./emailValidation.js":8,"./nameValidation.js":10,"./passValidation.js":11,"./websiteBehaviour.js":12}],10:[function(require,module,exports){
module.exports = function (module) {
  'use strict';
  /**
   * @ndoc directive
   * @name webApp.directive:nameValidation
   * @require 'NgModel'
   * @restrict 'A'
   * @scope
   *
   * @description
   * This check validation for names
   */
  module
    .directive('fullName', function() {
      return {
          restrict: 'A',
          require: 'ngModel',
          link: function(scope, element, attrs, controller) {
            controller.$parsers.unshift(function(viewValue) {
              if(viewValue && viewValue.indexOf(' ') !== -1 && viewValue[viewValue.indexOf(' ') + 1]) {
                controller.$setValidity('fullname', true);
                return viewValue;
              } else {
                controller.$setValidity('fullname', false);
                return viewValue;
              }
            });
          }
        };
    });
};

},{}],11:[function(require,module,exports){
module.exports = function (module) {
  'use strict';
  /**
   * @ndoc directive
   * @name webApp.directive:passValidation
   * @require 'NgModel'
   * @restrict 'A'
   * @scope
   *
   * @param {String} passwordVerify This parameter compares passwords for verify
   *
   * @description
   * This check verify for passwords
   */
  module
  .directive("passwordVerify",['$parse', function($parse) {
     return {
        restrict: 'A',
        require: "ngModel",
        link: link
     };
     function link(scope, elem, attrs, ngModel) {
       var originalModel = $parse(attrs.passwordVerify),
           secondModel = $parse(attrs.ngModel);
       scope.$watch(attrs.ngModel, function (newValue) {
         ngModel.$setValidity(attrs.name, newValue === originalModel(scope));
       })
       scope.$watch(attrs.passwordVerify, function (newValue) {
         ngModel.$setValidity(attrs.name, newValue === secondModel(scope));
       });
     }
  }]);
};

},{}],12:[function(require,module,exports){
module.exports = function (module) {
  'use strict';
  /**
   * @ndoc directive
   * @name webApp.directive:websiteBehaviour
   * @restrict 'A'
   * @scope
   *
   * @description
   * description for websiteBehaviour directive
   */
  module
  .directive('websiteBehaviour',['$rootScope', '$state', '$timeout', function($rootScope, $state, $timeout) {
    return {
      restrict: 'A',
      link: function(scope, element, attrs, controller) {
        /**
        * @ndoc jquery
        *
        * @description
        * changed page position to top when you moved to another page.
        */
      	$(document).ready(function() {
  		        $('body').scrollTop(0);
	      });
        /**
        * @ndoc jquery
        *
        * @description
        * when you click on navbar remove and add class "Active" to the navbar names and make their background orange
        */
	      $(document).on('click','#main-navbar',function(e) {
          if( $(e.target).is('a') && $(e.target).attr('class') != 'dropdown-toggle' ) {
          $(this).collapse('hide');
          }
	      });
      }
    };
  }]);
};

},{}],13:[function(require,module,exports){
module.exports = function (module) {
  'use strict';
  /**
   * @ndoc service
   * @name factory:ContactServices
   *
   * @description
   * service for Contact page that send request when form is success.
   */
  module
  .factory('ContactServices', ContactServices);
    ContactServices.$inject = ['$http', '$q']
    function ContactServices($http, $q) {
      var data;
      return {
        send: send
      }
      /**
       * @ndoc method
       * @name send
       *
       * @methodOf module.factory: ContactServices
       *
       * @description
       * send request to contacts
       */
      function send(data) {
        return $http ({
          method  : 'POST',
          url     : '/contacts',
          data    : data,  // pass in data as strings
        })
      };
    };
};

},{}],14:[function(require,module,exports){
module.exports = function (module) {
  'use strict';
  /**
	 * @ndoc service
	 * @name factory:SignInServices
	 *
	 * @description
   * service for sign-in page that send request when login is success.
	 */
  module
  .factory('SignInServices', SignInServices);
    SignInServices.$inject = ['$http', '$q']
    function SignInServices($http, $q) {
      var data;
      return {
        send: send
      }
      /**
       * @ndoc method
       * @name send
       *
       * @methodOf module.factory: SignInServices
       *
       * @description
       * send request to sign-in
       */
      function send(data) {
        return $http ({
          method  : 'POST',
          url     : '/sign-in',
          data    : data,  // pass in data as strings
        })
      };
    };
};

},{}],15:[function(require,module,exports){
module.exports = function (module) {
  'use strict';
  /**
	 * @ndoc service
	 * @name factory:SignUpServices
	 *
	 * @description
   * service for sign-up page that send request when form is success.
	 */
  module
  .factory('SignUpServices', SignUpServices);
    SignUpServices.$inject = ['$http', '$q']
    function SignUpServices($http, $q) {
      var data;
      return {
        send: send
      }
      /**
       * @ndoc method
       * @name sendCode
       *
       * @methodOf module.factory: SignUpServices
       *
       * @description
       * send request to sign-up
       */
      function send(data) {
        return $http ({
          method  : 'POST',
          url     : '/sign-up',
          data    : data,  // pass in data as strings
        })
      };
    };
};

},{}],16:[function(require,module,exports){
module.exports = function (module) {
	require('./ContactServices')(module);
	require('./SignUpServices')(module);
	require('./SignInServices')(module);
}

},{"./ContactServices":13,"./SignInServices":14,"./SignUpServices":15}]},{},[1]);
